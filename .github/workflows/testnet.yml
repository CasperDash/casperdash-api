# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ develop, feature/setup-nft-api-token ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install packages and test
      run: |
        npm install --production
      env:
        CI: true 
  
  deploy:

    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: SSH and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_TESTNET_HOST }}
          username: ${{ secrets.AWS_DEPLOY_USER }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            source ~/.profile
            cd ~/stack/projects/casperdash-api
            touch .env
            echo NFT_STORAGE_API_TOKEN=${{ secrets.TESTNET_NFT_STORAGE_API_TOKEN }} >> .env
            git pull
            ./run-testnet.sh

  notification:

      needs: [deploy]
      if: github.ref == 'refs/heads/develop'
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Send build result to slack channel
          uses: rtCamp/action-slack-notify@v2
          env: 
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_COLOR: ${{ job.status }}
            SLACK_FOOTER: Powered by CasperDash
